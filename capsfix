#!/usr/bin/env bash

enable_fix() {
  local cmd restart=0 confile="${1}"
  cmd=("$(command -v keyd{,.rvaiya})")

  if ! [[ -f ${confile} ]]; then
    echo "#: Creating config file ${confile}..."
  else
    restart=1
    echo "#: Recreating config file ${confile}..."
  fi

  {
    mkdir -p "${confile%/*}" \
      && echo -e '[ids]\n*\n\n[main]\ncapslock = macro(capslock)\n' \
        | tee "${confile}" &> /dev/null
  } || {
    echo "E: Config file creation failed!" >&2
    exit 1
  }

  echo "#: Loading input devices..."
  {
    "${cmd[0]}" -m &
    PID=$!
    sleep 1
    kill -INT "${PID}"
    wait "${PID}"
  } || {
    echo "E: Loading inputs with keyd failed!" >&2
    exit 1
  }

  {
    if ! ((restart)); then
      echo "#: Enabling keyd with systemctl..."
      if ! systemctl is-enabled keyd &> /dev/null; then
        systemctl enable --now keyd
      else
        systemctl restart keyd
      fi
    else
      echo "#: Restarting keyd with systemctl..."
      systemctl restart keyd
    fi
  } || {
    echo "E: Enabling keyd with systemd failed!" >&2
    exit 1
  }

  echo "#: Caps lock config will remain Mac/Windows style until disabled!"
}

disable_fix() {
  local confile="${1}"

  if ! [[ -f ${confile} ]] && ! systemctl is-enabled keyd &> /dev/null; then
    echo "#: Nothing to do!"
    exit 0
  fi

  if [[ -f ${confile} ]]; then
    echo "#: Removing config file ${confile}..."
    rm -f "${confile}"
  fi

  if systemctl is-enabled keyd &> /dev/null; then
    echo "#: Disabling keyd with systemctl..."
    systemctl disable --now keyd || {
      echo "E: Disabling keyd with systemd failed!" >&2
      exit 1
    }
  fi

  echo "#: Caps lock config will remain Linux style until enabled again!"
}

main() {
  local input="${1}" err=0 config='/etc/keyd/capsfix.conf'

  if ((EUID)); then
    echo "E: capsfix must be run with sudo!" >&2
    err=1
  fi

  if ! command -v keyd{,.rvaiya} &> /dev/null; then
    echo "E: keyd is required to run capsfix!" >&2
    err=1
  fi

  if ! command -v systemctl &> /dev/null; then
    echo "E: systemd is required to run capsfix!" >&2
    err=1
  fi

  if ((err)); then
    echo "#: Requirements not satisified. Exiting..."
    exit 1
  fi

  case "${input}" in
    enable|disable) "${1}"_fix "${config}" ;;
    *)
      echo "Usage: ${0##*/} {enable|disable}"
      exit 1
      ;;
  esac
}

main "${1}"
